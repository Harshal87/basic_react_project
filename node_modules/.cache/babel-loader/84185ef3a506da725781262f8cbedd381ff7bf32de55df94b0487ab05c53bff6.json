{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rakes\\\\OneDrive\\\\Desktop\\\\Sharpener\\\\React Projects\\\\basic_react\\\\src\\\\components\\\\ExpenseMain\\\\ExpenseChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseChart = props => {\n  const dataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  props.filteredData.forEach(expense => {\n    const dataMonth = expense.date.getMonth();\n    dataPoints[dataMonth].value += parseInt(expense.cost);\n  });\n  const maxVal = Math.max(dataPoints.map(obj => console.log(\"max fn \", obj)));\n  console.log(\"main1 \", maxVal);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: dataPoints,\n    maxVal: maxVal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","ExpenseChart","props","dataPoints","label","value","filteredData","forEach","expense","dataMonth","date","getMonth","parseInt","cost","maxVal","Math","max","map","obj","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rakes/OneDrive/Desktop/Sharpener/React Projects/basic_react/src/components/ExpenseMain/ExpenseChart.js"],"sourcesContent":["import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart=(props)=>{\r\n\r\nconst dataPoints=[\r\n    {label:\"Jan\",value:0},\r\n    {label:\"Feb\",value:0},\r\n    {label:\"Mar\",value:0},\r\n    {label:\"Apr\",value:0},\r\n    {label:\"May\",value:0},\r\n    {label:\"Jun\",value:0},\r\n    {label:\"Jul\",value:0},\r\n    {label:\"Aug\",value:0},\r\n    {label:\"Sep\",value:0},\r\n    {label:\"Oct\",value:0},\r\n    {label:\"Nov\",value:0},\r\n    {label:\"Dec\",value:0}\r\n]\r\n\r\n\r\nprops.filteredData.forEach((expense)=>{\r\n   \r\n    const dataMonth= expense.date.getMonth()\r\n \r\n    dataPoints[dataMonth].value+=parseInt(expense.cost)\r\n    \r\n   })\r\n\r\n\r\n  const maxVal=Math.max(dataPoints.map((obj)=>\r\n    console.log(\"max fn \",obj)\r\n    ))\r\n  console.log(\"main1 \",maxVal)\r\n\r\n   \r\nreturn(\r\n    <Chart dataPoints={dataPoints} maxVal={maxVal}>\r\n\r\n    </Chart>\r\n)\r\n\r\n}\r\n\r\nexport default ExpenseChart"],"mappings":";AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,YAAY,GAAEC,KAAK,IAAG;EAE5B,MAAMC,UAAU,GAAC,CACb;IAACC,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,CACxB;EAGDH,KAAK,CAACI,YAAY,CAACC,OAAO,CAAEC,OAAO,IAAG;IAElC,MAAMC,SAAS,GAAED,OAAO,CAACE,IAAI,CAACC,QAAQ,CAAC,CAAC;IAExCR,UAAU,CAACM,SAAS,CAAC,CAACJ,KAAK,IAAEO,QAAQ,CAACJ,OAAO,CAACK,IAAI,CAAC;EAEpD,CAAC,CAAC;EAGH,MAAMC,MAAM,GAACC,IAAI,CAACC,GAAG,CAACb,UAAU,CAACc,GAAG,CAAEC,GAAG,IACvCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACF,GAAG,CACzB,CAAC,CAAC;EACJC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACN,MAAM,CAAC;EAG9B,oBACId,OAAA,CAACF,KAAK;IAACK,UAAU,EAAEA,UAAW;IAACW,MAAM,EAAEA;EAAO;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvC,CAAC;AAGZ,CAAC;AAAAC,EAAA,GAvCKxB,YAAY;AAyClB,eAAeA,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}