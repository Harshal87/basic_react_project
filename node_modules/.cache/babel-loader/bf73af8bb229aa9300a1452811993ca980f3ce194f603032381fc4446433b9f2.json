{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rakes\\\\OneDrive\\\\Desktop\\\\Sharpener\\\\React Projects\\\\basic_react\\\\src\\\\components\\\\ExpenseMain\\\\ExpenseChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseChart = props => {\n  const dataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  props.filteredData.forEach(expense => {\n    console.log(expense);\n    const dataMonth = expense.date.getMonth();\n    dataPoints[dataMonth].value += expense.amount;\n  });\n  console.log(dataPoints);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: dataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","ExpenseChart","props","dataPoints","label","value","filteredData","forEach","expense","console","log","dataMonth","date","getMonth","amount","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rakes/OneDrive/Desktop/Sharpener/React Projects/basic_react/src/components/ExpenseMain/ExpenseChart.js"],"sourcesContent":["import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart=(props)=>{\r\n\r\nconst dataPoints=[\r\n    {label:\"Jan\",value:0},\r\n    {label:\"Feb\",value:0},\r\n    {label:\"Mar\",value:0},\r\n    {label:\"Apr\",value:0},\r\n    {label:\"May\",value:0},\r\n    {label:\"Jun\",value:0},\r\n    {label:\"Jul\",value:0},\r\n    {label:\"Aug\",value:0},\r\n    {label:\"Sep\",value:0},\r\n    {label:\"Oct\",value:0},\r\n    {label:\"Nov\",value:0},\r\n    {label:\"Dec\",value:0}\r\n]\r\n\r\n\r\nprops.filteredData.forEach((expense)=>{\r\n    console.log(expense)\r\n    const dataMonth= expense.date.getMonth()\r\n    dataPoints[dataMonth].value+=expense.amount\r\n    \r\n   })\r\n\r\n   console.log(dataPoints)\r\nreturn(\r\n    <Chart dataPoints={dataPoints}>\r\n\r\n    </Chart>\r\n)\r\n\r\n}\r\n\r\nexport default ExpenseChart"],"mappings":";AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,YAAY,GAAEC,KAAK,IAAG;EAE5B,MAAMC,UAAU,GAAC,CACb;IAACC,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,CACxB;EAGDH,KAAK,CAACI,YAAY,CAACC,OAAO,CAAEC,OAAO,IAAG;IAClCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,MAAMG,SAAS,GAAEH,OAAO,CAACI,IAAI,CAACC,QAAQ,CAAC,CAAC;IACxCV,UAAU,CAACQ,SAAS,CAAC,CAACN,KAAK,IAAEG,OAAO,CAACM,MAAM;EAE5C,CAAC,CAAC;EAEFL,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;EAC1B,oBACIH,OAAA,CAACF,KAAK;IAACK,UAAU,EAAEA;EAAW;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvB,CAAC;AAGZ,CAAC;AAAAC,EAAA,GAhCKlB,YAAY;AAkClB,eAAeA,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}